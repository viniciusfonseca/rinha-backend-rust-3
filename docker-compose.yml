services:
  api01: &api
    build: .
    hostname: api01
    depends_on:
      - api03
      - db
    networks:
      - backend
    expose:
      - 8080
    environment:
      NODE: 1
      TCP_LISTEN: "0.0.0.0:8080"
      WORKER_URL: "http://api03:8082"
      DB_CONNECTION_STRING: postgres://postgres:1234@db:5432/rinhadb
      PAYMENT_PROCESSOR_URL_DEFAULT: http://payment-processor-default:8080
      PAYMENT_PROCESSOR_URL_FALLBACK: http://payment-processor-fallback:8080
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "10MB"

  api02:
    <<: *api
    hostname: api02
    expose:
      - 8081
    environment:
      NODE: 2
      TCP_LISTEN: "0.0.0.0:8081"
      WORKER_URL: "http://api03:8082"
      DB_CONNECTION_STRING: postgres://postgres:1234@db:5432/rinhadb
      PAYMENT_PROCESSOR_URL_DEFAULT: http://payment-processor-default:8080
      PAYMENT_PROCESSOR_URL_FALLBACK: http://payment-processor-fallback:8080

  api03:
    <<: *api
    hostname: api03
    depends_on:
      - db
    expose:
      - 8082
    networks:
      - backend
      - payment-processor
    environment:
      NODE: 3
      WORKER_MAX_THREADS: 15000
      TCP_LISTEN: "0.0.0.0:8082"
      DB_CONNECTION_STRING: postgres://postgres:1234@db:5432/rinhadb
      PAYMENT_PROCESSOR_URL_DEFAULT: http://payment-processor-default:8080
      PAYMENT_PROCESSOR_URL_FALLBACK: http://payment-processor-fallback:8080
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "140MB"

  db:
    image: postgres
    hostname: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: rinhadb
    volumes:
      - ./assets/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./assets/postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 20
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: '200MB'

  nginx:
    image: nginx:latest
    volumes:
      - ./assets/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api01
      - api02
    ports:
      - "9999:9999"
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '40MB'

networks:
  backend:
    name: backend
    driver: bridge
  payment-processor:
    external: true